{
	"info": {
		"_postman_id": "ec5f323c-7197-4b33-8215-7fb810a99b30",
		"name": "Blog Post",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24835676"
	},
	"item": [
		{
			"name": "Authenticate",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"artak.hovsepyan@mail.ru\",\r\n    \"password\":\"Hayastan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3005/api/login",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"login"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Artak\",\n    \"lastName\":\"Hovsepyan\",\n    \"email\":\"artak.hovsepyan@mail.ru\",\n    \"password\":\"Hayastan\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3005/api/register",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "ProflieUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY5NDIxZTI1ZjBkMTA1YjI2ZDcyYSIsImlhdCI6MTcwNjQ2NDMxNH0.jpcL_O5hsoIKOq34h5nU9GAzsLbbnXFbyf_REV2sY7Y",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"Artak\",\n    \"password\":\"Hayastan\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3005/api/profile",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"profile"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "GetProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY5NDIxZTI1ZjBkMTA1YjI2ZDcyYSIsImlhdCI6MTcwNjQ2NDMxNH0.jpcL_O5hsoIKOq34h5nU9GAzsLbbnXFbyf_REV2sY7Y",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3005/api/profile",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"profile"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "BlogPost",
			"item": [
				{
					"name": "PostBlog",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY5NDIxZTI1ZjBkMTA1YjI2ZDcyYSIsImlhdCI6MTcwNjQ2NDMxNH0.jpcL_O5hsoIKOq34h5nU9GAzsLbbnXFbyf_REV2sY7Y",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"title\":\"USA\",\r\n    \"body\":\"USA the best\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3005/api/newPost",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"newPost"
							]
						}
					},
					"response": []
				},
				{
					"name": "updatePost",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY5NDIxZTI1ZjBkMTA1YjI2ZDcyYSIsImlhdCI6MTcwNjQ2NDMxNH0.jpcL_O5hsoIKOq34h5nU9GAzsLbbnXFbyf_REV2sY7Y",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"body\":\"Armenia one of the best country in the world\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3005/api/myPosts/65b69527bb57825fea8b23fc",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"myPosts",
								"65b69527bb57825fea8b23fc"
							]
						}
					},
					"response": []
				},
				{
					"name": "allUserPosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY5NDIxZTI1ZjBkMTA1YjI2ZDcyYSIsImlhdCI6MTcwNjQ2NDMxNH0.jpcL_O5hsoIKOq34h5nU9GAzsLbbnXFbyf_REV2sY7Y",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:3005/api/myPosts",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"myPosts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllPosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY5NDIxZTI1ZjBkMTA1YjI2ZDcyYSIsImlhdCI6MTcwNjQ2NDMxNH0.jpcL_O5hsoIKOq34h5nU9GAzsLbbnXFbyf_REV2sY7Y",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:3005/api/posts",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeletePost",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjY5NDIxZTI1ZjBkMTA1YjI2ZDcyYSIsImlhdCI6MTcwNjQ2NDMxNH0.jpcL_O5hsoIKOq34h5nU9GAzsLbbnXFbyf_REV2sY7Y",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:3005/api/myPosts/65b69527bb57825fea8b23fc",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"myPosts",
								"65b69527bb57825fea8b23fc"
							]
						}
					},
					"response": []
				},
				{
					"name": "getPostsComments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:3005/api/65b6960dbb57825fea8b2402/comments",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"65b6960dbb57825fea8b2402",
								"comments"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjUxMTE5YjFjMmNlODI0NjhkNjVjMyIsImlhdCI6MTcwNjQ1NDkzNH0.6gjWzMPrOtvx9oUfQ7_FhAy6HOnYsMJs_FlUaDRkANY",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"message\":\"amazing place\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3005/api/65b6960dbb57825fea8b2402/comment",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"65b6960dbb57825fea8b2402",
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteComment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "auth-token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1YjUxMTE5YjFjMmNlODI0NjhkNjVjMyIsImlhdCI6MTcwNjM2NzIwNH0.XskSgA1vxGbUp8wbMNsosf8FnsATE8UwwosR8uJDrAI",
								"type": "text"
							}
						],
						"url": {
							"raw": "localhost:3005/api/65b6960dbb57825fea8b2402/comment/65b6999b4d1c41f994167a3e",
							"host": [
								"localhost"
							],
							"port": "3005",
							"path": [
								"api",
								"65b6960dbb57825fea8b2402",
								"comment",
								"65b6999b4d1c41f994167a3e"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}